#include<iostream>
#define MAX 501
using namespace std;

int M, N;
int matrix[MAX][MAX];
int dp[MAX][MAX];

int dx[] = { -1, 1, 0, 0 };
int dy[] = { 0,0, -1, 1 };

int dfs(int x, int y) {
	if (x == M - 1 && y == N - 1) { return 1; }  // 도착했으니 경로수 +1 을 하기 위해서 1 리턴
	if (dp[x][y] != -1) return dp[x][y];  // 한번 설정된 적이 있으면 그냥 그 값 그대로 리턴


	dp[x][y] = 0;  // 한번 방문했으니 일단 0으로 설정 (-1과 구분)  // 경로가 있을지 없을지는 밑에 for문을 돌려봐야 아는 거임. 일단 0
	for (int i = 0; i < 4; i++) {
		int nx = x + dx[i];
		int ny = y + dy[i];

		if(nx >= 0 && nx < M && ny >= 0 && ny < N){
			if (matrix[nx][ny] < matrix[x][y]) dp[x][y] += dfs(nx, ny);
		}
	}

	return dp[x][y];
}

int main(void) {
	cin >> M >> N;

	for (int i = 0; i < M; i++) {
		for (int k = 0; k < N; k++) {
			cin >> matrix[i][k];
			dp[i][k] = -1;
		}
	}
	cout << dfs(0, 0);
}