#include<iostream>
#include<cstring>
#define MAX 601
using namespace std;

int N,M;
int matrix[MAX][MAX];
int visited[MAX][MAX];

int dx[] = {-1, 1, 0, 0};
int dy[] = {0, 0, -1, 1};

int cnt;

void dfs(int a, int b){
    
    visited[a][b] = 1;
    
    for(int i=0;i<4;i++){
        int x = a + dx[i];
        int y = b + dy[i];
        
        if(matrix[x][y] == -1) continue;
        
        if(x >= 0 && x < N && y >=0 && y < M && !visited[x][y]){
            if(matrix[x][y] == 1) { cnt++; dfs(x,y);}
           else if(matrix[x][y] == 0) { dfs(x,y);}
        }
    }
    
}


int main(void){
    
    cin >> N >> M;
    char c;
    
    int x;  int y;
    
    for(int i=0;i<N;i++){
        for(int k=0;k<M;k++){
            cin >> c;
            if(c == '0') matrix[i][k] = 0;
            else if(c == 'P') matrix[i][k] = 1;
            else if(c == 'X') matrix[i][k] = -1;
            else if(c == 'I') {
                matrix[i][k] = 2;
                x = i;  y = k;
            }
        }
    }
    
    
    dfs(x,y);
    if(cnt == 0) cout << "TT";
    else cout << cnt;
}