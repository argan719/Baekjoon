#include<iostream>
#include<cstring>
#include<vector>
#include<algorithm>
#define MAX 101
using namespace std;

int N;
int map[MAX];
int visited[MAX];
int check[MAX];

vector<int> set;

bool dfs(int v, int from, int to){

    if(v == to) {
        return true;
    }
    if(visited[to] == 1) return false;
    
    visited[to] = 1;
    
    return dfs(v, to, map[to]);

}

int main(void){
    cin >> N;
    
    for(int i=1;i<=N;i++){
        cin >> map[i];
        check[map[i]] = 1;
    }
    
    for(int i=1;i<=N;i++){
        if(check[i] == 1){
            memset(visited, 0, sizeof(visited));
            if(dfs(i, i, map[i])) set.push_back(i);
        }
    }
    
    sort(set.begin(), set.end());
    
    cout << set.size() << endl;
    
    for(int i=0;i<set.size();i++){
        cout << set[i] << endl;
    }
}
